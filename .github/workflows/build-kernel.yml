name: Build MikaKernel


on:
  workflow_dispatch:


jobs:
  build-kernel:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Setup environment
        run: |
          echo "ANYKERNEL_SOURCE=$(cat config.env | grep -w "ANYKERNEL_SOURCE" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
          echo "ANYKERNEL_SOURCE_BRANCH=$(cat config.env | grep -w "ANYKERNEL_SOURCE_BRANCH" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
          echo "KERNEL_SOURCE=$(cat config.env | grep -w "KERNEL_SOURCE" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
          echo "KERNEL_SOURCE_BRANCH=$(cat config.env | grep -w "KERNEL_SOURCE_BRANCH" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
          echo "KERNEL_CONFIG=$(cat config.env | grep -w "KERNEL_CONFIG" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
          echo "BUILD_ARGS=$(cat config.env | grep -w "BUILD_ARGS" | head -n 1 | cut -d ":" -f 2)" >> $GITHUB_ENV

      - name: Pull toolchain
        run: |
          git clone --depth=1 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 -b android11-release aarch64-linux-android-4.9
          git clone --depth=1 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9 -b android11-release arm-linux-androideabi-4.9
          mkdir clang && wget https://github.com/ZyCromerZ/Clang/releases/download/21.0.0git-20250303-release/Clang-21.0.0git-20250303.tar.gz -RLO && tar -C clang/ -xf Clang-21.0.0git-20250303.tar.gz *.tar.gz
          sudo apt-get update 
          sudo apt-get install -y bc curl git zip ftp libssl-dev lftp zstd wget libfl-dev python2 python3 libarchive-tools

      - name: Pull kernel source
        run: |
          git clone --depth=1 ${{ env.KERNEL_SOURCE }} -b ${{ env.KERNEL_SOURCE_BRANCH }} kernel-source

      - name: Build kernel
        run: |
          export KBUILD_BUILD_USER="DhamarAr"
          export KBUILD_BUILD_HOST="Ordinary-Being"
          export PATH=$GITHUB_WORKSPACE/clang/Clang-21.0.0git-20250303/bin:${PATH}
          args="                  ARCH=arm64 \
                                  O=../out \
                                  ${{ env.BUILD_ARGS }} \
                                  CLANG_TRIPLE=aarch64-linux-gnu- \
                                  CROSS_COMPILE=$GITHUB_WORKSPACE/aarch64-linux-android-4.9/bin/aarch64-linux-android- \
                                  CROSS_COMPILE_ARM32=$GITHUB_WORKSPACE/arm-linux-androideabi-4.9/bin/arm-linux-androideabi- "
          cd kernel-source
          make ${args} ${{ env.KERNEL_CONFIG }}
          make -j$(($(getconf _NPROCESSORS_ONLN) * 2)) ${args}

      - name: Package kernel
        run: |
          git clone --depth=1 ${{ env.ANYKERNEL_SOURCE }} -b ${{ env.ANYKERNEL_SOURCE_BRANCH }} AnyKernel3 && rm -rf AnyKernel3/.git AnyKernel3/.github AnyKernel3/LICENSE AnyKernel3/README.md
          if [[ -f out/arch/arm64/boot/Image.gz-dtb ]]; then
            cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3/Image.gz-dtb
          elif [[ -f out/arch/arm64/boot/Image-dtb ]]; then
            cp out/arch/arm64/boot/Image-dtb AnyKernel3/Image-dtb
          elif [[ -f out/arch/arm64/boot/Image.gz ]]; then
            cp out/arch/arm64/boot/Image.gz AnyKernel3/Image.gz
          elif [[ -f out/arch/arm64/boot/Image ]]; then
            cp out/arch/arm64/boot/Image AnyKernel3/Image
          fi
          if [ -f out/arch/arm64/boot/dtbo.img ]; then
            cp out/arch/arm64/boot/dtbo.img AnyKernel3/dtbo.img
          fi

      - name: Upload kernel to artifact
        uses: actions/upload-artifact@v4
        with:
          name: output_kernel
          path: AnyKernel3/*
